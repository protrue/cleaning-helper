<Window x:Class="CleaningHelper.Gui.FramesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CleaningHelper.Gui"
        xmlns:gs="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:ext="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
        xmlns:model="clr-namespace:CleaningHelper.Model;assembly=CleaningHelper.Model"
        xmlns:vm="clr-namespace:CleaningHelper.ViewModel;assembly=CleaningHelper.ViewModel"
        mc:Ignorable="d"
        Title="Редактор фреймов"
        Icon="Resources/icon.ico"
        Height="600"
        Width="800">

    <Window.Resources>
        <DataTemplate x:Key="FrameTemplate" DataType="{x:Type model:Frame}">
            <StackPanel Margin="5">
                <TextBlock Text="{Binding Path=Name}"/>
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type gs:VertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type gs:VertexControl}">
                        <Border
                            BorderBrush="Black"
                            BorderThickness="1">
                            <ContentPresenter
                                Content="{TemplateBinding Vertex}"
                                ContentTemplate="{StaticResource FrameTemplate}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem
                HorizontalAlignment="Right"
                Header="Редактировать перечислимые домены"
                Click="MenuItem_Click">
            </MenuItem>
        </Menu>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <GroupBox
                Grid.Column="0"
                Header="Фреймы">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                        <Button Name="AddFrameButton" Content="Добавить" Margin="10 5" Padding="5" Click="AddFrameButton_OnClick"></Button>
                        <Button Name="RemoveFrameButton" Content="Удалить" Margin="10 5" Padding="5" Click="RemoveFrameButton_OnClick" IsEnabled="{Binding Path=IsFrameSelected}"></Button>
                        <Button Name="AutoLayoutButton" Content="Авторасположение" Margin="10 5" Padding="5" Click="AutoLayoutButton_OnClick"></Button>
                        <ComboBox ItemsSource="{Binding Path=LayoutAlgorithms}" SelectedItem="{Binding Path=SelectedLayoutAlgorithm}" Margin="10 5" Padding="5"></ComboBox>
                    </DockPanel>

                    <ext:ZoomControl
                        Name="ZoomControl"
                        Mode="Original">
                        <gs:GraphLayout
                            Name="GraphLayout"
                            LayoutAlgorithmType="{Binding Path=SelectedLayoutAlgorithm}"
                            OverlapRemovalAlgorithmType="FSA"
                            PreviewMouseDown="GraphLayout_PreviewMouseDown">
                            <gs:GraphLayout.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Name="AddParentMenuItem" Header="Добавить потомка" Click="AddParentMenuItem_OnClick"></MenuItem>
                                    <MenuItem Name="AddChildMenuItem" Header="Добавить родителя" Click="AddChildMenuItem_OnClick"></MenuItem>
                                </ContextMenu>
                            </gs:GraphLayout.ContextMenu>
                        </gs:GraphLayout>
                    </ext:ZoomControl>
                </DockPanel>
            </GroupBox>

            <GroupBox
            Header="Слоты фрейма"
            Grid.Column="1">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" >
                        <Button Name="AddSlotButton" DockPanel.Dock="Top" Content="Добавить" Margin="10 5" Padding="5" IsEnabled="{Binding Path=IsFrameSelected}" Click="AddSlotButton_OnClick"></Button>
                        <Button Name="RemoveSlotButton" DockPanel.Dock="Top" Content="Удалить" Margin="10 5" Padding="5" IsEnabled="{Binding Path=IsSlotSelected}" Click="RemoveSlotButton_OnClick"></Button>
                    </StackPanel>
                    <GroupBox DockPanel.Dock="Top" Header="Редактировать выбранный слот">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="0" Text="{Binding Path=SelectedSlot.Name}" IsReadOnly="{Binding Path=IsSlotNameEditable}" Margin="5"></TextBox>
                            <ComboBox Grid.Column="1" ItemsSource="{Binding Path=FrameModel.Domains}" DisplayMemberPath="Name" SelectedItem="SelectedDomain" IsReadOnly="{Binding Path=IsSlotTypeEditable}" Margin="5"></ComboBox>
                            <ComboBox Grid.Column="2" Margin="5"></ComboBox>
                            <TextBox Grid.Column="2" Margin="5"></TextBox>
                        </Grid>
                    </GroupBox>
                    <ListBox></ListBox>
                    <DataGrid
                        Name="SlotsDataGrid"
                        ItemsSource="{Binding Path=SelectedFrame.Slots}"
                        AutoGenerateColumns="False"
                        SelectedItem="{Binding Path=SelectedSlot}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="C" Binding="{Binding IsSystemSlot}" IsReadOnly="True"></DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn Header="З" Binding="{Binding IsRequestable}"></DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn Header="Р" Binding="{Binding IsResult}"></DataGridCheckBoxColumn>
                            <DataGridTextColumn
                                Header="Имя" 
                                Binding="{Binding Path=Name, Mode=OneWay}"
                                Width="*"
                                IsReadOnly="True"/>
                            <DataGridTextColumn 
                                Header="Тип"
                                Binding="{Binding Path=TypeAsString, Mode=OneWay}"
                                Width="*"
                                IsReadOnly="True"/>
                            <DataGridTextColumn
                                Header="Значение"
                                Binding="{Binding Path=ValueAsString, Mode=OneWay}"
                                Width="*">
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </GroupBox>
        </Grid>
    </DockPanel>
</Window>
